<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!--引进spring-dao.xml配置文件-->
    <import resource="spring-dao.xml"/>

    <!--扫描路径-->
    <context:component-scan base-package="com.lmt"/>

    <!--创建shiroFilter对象-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--登录页面-->
        <property name="loginUrl" value="login.html"/>
        <!--未认证的跳转页面-->
        <property name="unauthorizedUrl" value="403.html"/>
        <!--过滤器链-->
        <property name="filterChainDefinitions">
            <value>
                <!--经过认证后才可访问相应的路径-->
                /login.html=anon
                /subLogin.form=anon
                /testRole.form=roles["admin"]
                /testRole1.form=roles["admin","admin1"]
                /testPerms.form=perms["user:delete"]
                /testPerms1.form=perms["user:delete","user:update"]
                /testRole2.form=rolesOr["admin","admin1"]
                /*=authc
            </value>
        </property>
        <!--配置自定义filter-->
        <property name="filters">
            <util:map>
                <entry key="rolesOr" value-ref="rolesOrFilter"/>
            </util:map>
        </property>
    </bean>

    <!--配置自定义filter-->
    <bean id="rolesOrFilter" class="com.lmt.filter.RolesOrFilter"/>

    <!--构建SecurityManager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--将自定义realm设置到SecurityManager环境中-->
        <property name="realm" ref="realm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="CacheManager" ref="redisCacheManager"/>
        <property name="rememberMeManager" ref="cookieRememberMeManager"/>
    </bean>

    <!--创建自定义realm-->
    <bean id="realm" class="com.lmt.shiro.realm.CustomRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--加密管理器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <import resource="spring-redis.xml"/>

    <bean id="sessionManager" class="com.lmt.session.CustomSessionManager">
        <property name="sessionDAO" value="com.lmt.session.RedisSessionDao"/>
    </bean>

    <bean class="com.lmt.session.RedisSessionDao" id="redisSessionDao"/>

    <bean class="com.lmt.cache.RedisCacheManager" id="redisCacheManager"/>

    <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager">
        <property name="cookie" value="cookie"/>
    </bean>

    <!-- 单位是秒 -->
    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="cookie">
        <constructor-arg value="rememberMe"/>
        <property name="maxAge" value="2000000"/>
    </bean>

</beans>